todo:
 per piece evaluation
 move generation
 move legalization (check)

 position evaluation:
  check for checkmate and stalemate

struct move {
    piece *piece;
    unsigned int fromrow : 3;
    unsigned int fromcol : 3;

    unsigned int torow : 3;
    unsigned int tocol : 3;

    int enpassantrow : 4 = -2;
    int enpassantcol : 4 = -2;

    char promotion = ' ';

    bool castling : 1 = false;
};

eval:
    make checkmate worth              a lot
    make stalemate worth              0

move(::move):
    ; auto detect en passant ability
    ; auto remove castling ability
    ; auto remove en passant ability

    ; normal move
    ; castling
    ; en passant
    ; promotion

think of all possible moves:
    if in check, the only possible moves may be moving the king, or fixing the check

    check if move is actually legal:
        check for if any (illegal) moves by the opponent are attacking the king if you would move your move    

fenloader: properly set worth

for every possible move:
    think of all other possible moves
    for every possible move:
        think of all other possible moves
        for every possible move:
            .......

think of what's the worst that can happen, give a worse-ness score to all of them

pick the move with the lowest worse-ness score